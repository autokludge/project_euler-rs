// Project Euler: Problem 2
use std::fmt::Display;

/// Solution to Problem 2
///
///    Each new term in the Fibonacci sequence is generated by adding the
///   previous two terms. By starting with 1 and 2, the first 10 terms will be:
///
///                     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
///
///   By considering the terms in the Fibonacci sequence whose values do not
///   exceed four million, find the sum of the even-valued terms.
///
/// NOTE: Auto-generated, don't change signature
pub fn solution() -> impl Display {
    let mut sum = 0;
    let mut previous = 0;
    let mut current = 1;
    let limit = 4_000_000;

    while current < limit {
        sum += if current % 2 == 0 { current } else { 0 };
        (previous, current) = (current, previous + current);
    }

    sum
}
